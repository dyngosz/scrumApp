extends layout

link(rel='stylesheet', href='/stylesheets/style.css')
link(rel='stylesheet', href='http://netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap.min.css')
link(rel='stylesheet', href='http://mottie.github.io/tablesorter/css/theme.bootstrap.css')


//Sorting tasks table
script(type='text/javascript').
   $(document).ready(function() {
   $("table.table.tablesorter.table-bordered").tablesorter({});
   });

block content
   each individualProject in project
      div.navbar.navbar-inverse.navbar-fixed-top(role='navigation')
         div.container
            button.navbar-toggle(type='button', data-toggle='collapse', data-target='.navbar-collapse')
            a.navbar-brand(href="/profile")
               | SCRUM App
            div.nav.navbar-nav.navbar-right 
               li
                     a(href='/sprintcreator?id='+individualProject.projectid)="Add Sprint"
               li
                  a(href="/profile")= "Back"      
         div.collapse.navbar-collapse
      
      div(align='center', ng-app='ng-app')
            h1 #{individualProject.projectname}
            div(align='left', class='sprints' id='sprints')
               each sprint in sprints
                  div.row(align='center', class='jumbotron')
                     // Header table
                     table
                        col(width=500)
                        col(width=450)
                        col(width=100)
                        col(width=100)
                        thead
                           tr
                              th 
                                 a.btn.btn-primary(href='/taskcreator?id='+sprint.sprintid+'&pid='+individualProject.projectid, role='button') 
                                    span.glyphicon.glyphicon-plus(aria-hidden='true')
                                    |  Add task
                              th #{sprint.sprintname}
                              th Start date
                              th End date
                              
                        tbody
                           tr
                              td
                              td
                              td #{sprint.sprintstartdate}
                              td #{sprint.sprintenddate}
                     // End of Header table
                     br
                     // Task table
                     script(type='text/javascript').
                        $(function() {
                           $(" table.tablesorter ").tablesorter({
                                 theme : 'bootstrap',
                              widgets : [ 'uitheme' ]
                           });
                        });
                        $("table.tablesorter thead th:eq(3), table.tablesorter thead th:eq(4)").data("sorter", false).data("filter", false);

                     .container
                        table.tablesorter
                          col(width=150)
                          col(width=500)
                          col(width=25)
                          col(width=25)
                          col(width=25)
                          col(width=25)
                          thead
                            tr
                              th Task name
                              th Task description
                              th Points
                              th Edit
                              th Delete
                              th Status 
                          tbody
                           each task in tasks
                             if (sprint.sprintid === task.sprintid)
                               tr
                                 td #{task.taskname}
                                 td #{task.taskdescription}
                                 td(align='center') #{task.taskpoints}
                                 td(align='center')
                                    a.btn.btn-warning.btn-sm(href='/taskeditor?pid='+individualProject.projectid+'&sid='+sprint.sprintid+'&tid='+task.taskid, role='button') 
                                       span.glyphicon.glyphicon-pencil(aria-hidden='true')
                                 td(align='center')
                                    a.btn.btn-danger.btn-sm(onclick='deleteTask(' + task.taskid + ',' + individualProject.projectid + ')')
                                       span.glyphicon.glyphicon-remove(aria-hidden='true')
                                 if (task.taskstatus === 'not')
                                    td(align="center")
                                       span.label.label-dark Not started
                                 if (task.taskstatus === 'progress')
                                    td(align="center")
                                       span.label.label-apple In progress  
                                 if (task.taskstatus === 'review')
                                    td(align="center")
                                       span.label.label-violet Review        
                                 if (task.taskstatus === 'done')
                                    td(align="center")
                                       span.label.label-green Done        
                                    
                  div.row.col-md-12
                     br 
                     br 
                     br
                  
   // Script for deleting tasks               
   script(type='text/javascript').
      function deleteTask(task, project){
            if(confirm("Are you sure you want to delete task?")){
                $.post('deletetask', { taskid: task, projectid: project },function(data) {
                        alert(data);
                });
                location.reload();
            }
            else{
            }
        }
